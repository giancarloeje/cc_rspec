require 'spec_helper'
require 'factories'

describe 'Application', type: :model do
  it 'is not valid when no attributes are defined' do
    app = Application.new
    expect { app.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Company can't be blank, Name can't be blank, Key can't be blank, Key should contain alpha numeric and underscore characters only")
  end

  it 'is not valid without a company' do
    app = Application.new(:name => 'app', :key => 'app')
    expect { app.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Company can't be blank")
  end

  it 'is not valid without an app name' do
    @company = FactoryBot.create(:company)
    app = Application.new(:name => '', :key => 'app', company: @company)
    expect { app.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Name can't be blank")
  end

  it 'is not valid without app and key' do
    @company = FactoryBot.create(:company)
    app = Application.new(company: @company)
    expect { app.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Name can't be blank, Key can't be blank, Key should contain alpha numeric and underscore characters only")
  end

  it 'is not valid when key translation is missing' do
    @company = FactoryBot.create(:company)
    app = Application.new(:name => 'app', :key => "1", company: @company)
    expect { app.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Key should contain alpha numeric and underscore characters only")
  end

  it 'is not valid when name has a duplicate' do
    @company = FactoryBot.create(:company)
    app = Application.new(:name => 'app', :key => 'app', company: @company)
    app.save!

    app2 = Application.new(:name => 'app', :key => 'app2', company: @company)
    expect { app2.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Name has already been taken")

  end

  it 'is not valid when key has a duplicate' do
    @company = FactoryBot.create(:company)
    app = Application.new(:name => 'app', :key => 'app', company: @company)
    app.save!

    app2 = Application.new(:name => 'app2', :key => 'app', company: @company)
    expect { app2.save! }.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Key has already been taken. Note: key is generated by converting name to lowercase and symbols to underscores by default.")
  end

  it 'is only valid when name, key and company are defined' do
    @company = FactoryBot.create(:company)
    app = Application.new(:name => 'app', :key => 'app', company: @company)
    expect(app).to be_valid
  end
end