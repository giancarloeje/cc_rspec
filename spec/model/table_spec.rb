require 'spec_helper'
require 'factories'

describe 'Table', type: :model do
  it 'is invalid when no attributes are defined' do
    table = Table.new()
    expect{table.save!}.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Name can't be blank, Key can't be blank, Key should contain alpha numeric and underscore characters only, Update logic can't be blank")
  end

  it 'is valid when name is defined' do
    table = Table.new(:name => 'TableTest', :update_logic => 'replace')
    table.save!
    expect(Table.count).to eq(1)
  end

  it 'is invalid when table name is already taken' do
    @table = Table.new(:name => 'Table1', :update_logic => 'replace').save!
    @table2 = Table.new(:name => 'Table1', :update_logic => 'replace')
    expect{@table2.save!}.to raise_exception(ActiveRecord::RecordInvalid, 'Validation failed: Name has already been taken, Key has already been taken. Note: key is generated by converting name to lowercase and symbols to underscores by default.')
  end

  it 'is invalid when table name is a reserved name' do
    table = Table.new(:name => 'system', :update_logic => 'replace')
    expect{table.save!}.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Key is reserved and can't be used, Name is reserved and can't be used")
  end

  it 'is invalid when table name is a reserved name (test downcase)' do
    table = Table.new(:name => 'SYSTEM', :update_logic => 'replace')
    expect{table.save!}.to raise_exception(ActiveRecord::RecordInvalid, "Validation failed: Key is reserved and can't be used, Name is reserved and can't be used")
  end

end